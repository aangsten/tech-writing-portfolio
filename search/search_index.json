{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Technical Writing Portfolio","text":"<p>Welcome! \ud83d\udc4b I\u2019m Andrew Angsten, a Technical Support Engineer with 15+ years of experience in support, site reliability engineering, and software development. I\u2019m currently transitioning into technical writing, with a focus on creating clear, accurate, and user-friendly documentation for technical audiences.</p>"},{"location":"#highlights","title":"\ud83d\udd11 Highlights","text":"<ul> <li>Hands-on technical expertise in SQL Server, Azure, networking, and automation  </li> <li>Strong support background: translating complex issues into clear solutions  </li> <li>Writing samples across multiple documentation types:</li> <li>Tutorials</li> <li>Troubleshooting guides</li> <li>Setup instructions</li> <li>Conceptual/overview docs</li> <li>Tooling: Markdown, MkDocs Material, GitHub Pages, Mermaid diagrams, PowerShell</li> </ul>"},{"location":"#documentation-samples","title":"\ud83d\udcda Documentation Samples","text":""},{"location":"#tutorials","title":"Tutorials","text":"<ul> <li>Automating F5 Load Balancer Tasks with PowerShell</li> </ul>"},{"location":"#troubleshooting-guides","title":"Troubleshooting Guides","text":"<ul> <li>Converting Epoch Timestamps in SQL Server</li> </ul>"},{"location":"#setup-guides","title":"Setup Guides","text":"<ul> <li>Restoring a SQL Database in Azure</li> </ul>"},{"location":"#conceptual-docs","title":"Conceptual Docs","text":"<ul> <li>High Availability and Failover Basics</li> </ul>"},{"location":"#tools-framework","title":"\ud83d\udee0 Tools &amp; Framework","text":"<p>This site is built with:</p> <ul> <li>MkDocs Material for site generation  </li> <li>Markdown for source docs  </li> <li>Mermaid for diagrams  </li> <li>GitHub Pages for hosting  </li> </ul>"},{"location":"#about-me","title":"\ud83d\udc4b About Me","text":"<p>Over the past 15+ years I\u2019ve worked across:</p> <ul> <li>Technical Support \u2014 helping customers resolve complex issues quickly  </li> <li>Site Reliability Engineering \u2014 maintaining high-availability systems  </li> <li>Software Development \u2014 building internal tools and automation  </li> </ul> <p>I bring that experience into technical writing, ensuring docs are practical, accurate, and tailored to the reader\u2019s needs.</p>"},{"location":"#contact","title":"\ud83d\udcec Contact","text":"<ul> <li>LinkedIn </li> <li>GitHub </li> </ul>"},{"location":"about/","title":"About Me","text":""},{"location":"about/#introduction","title":"\ud83d\udc4b Introduction","text":"<p>Hi, I\u2019m Andrew Angsten. I\u2019ve spent over 15 years in technical support, site reliability engineering (SRE), and software development. Today, I\u2019m pursuing a career transition into technical writing, leveraging my experience solving complex technical problems and explaining them clearly to diverse audiences.</p>"},{"location":"about/#professional-background","title":"\ud83d\udee0 Professional Background","text":"<ul> <li>Technical Support (15+ years)   Helping customers troubleshoot and resolve complex system issues with clarity and empathy.  </li> <li>Site Reliability Engineering (3 years)   Ensuring systems were reliable, scalable, and performant under demanding production conditions.  </li> <li>Software Development (3 years)   Building automation and internal tools, with experience in PowerShell, SQL, and Python.</li> </ul>"},{"location":"about/#why-technical-writing","title":"\u270d\ufe0f Why Technical Writing?","text":"<p>I\u2019ve always enjoyed:</p> <ul> <li>Translating complex technical concepts into clear, step-by-step guidance </li> <li>Building documentation that not only solves a problem but also empowers the reader  </li> <li>Acting as a bridge between developers, operations teams, and end users  </li> </ul> <p>I see technical writing as the natural progression of my career: applying my technical depth and support experience to create documentation that is both accurate and approachable.</p>"},{"location":"about/#writing-philosophy","title":"\ud83d\udca1 Writing Philosophy","text":"<ol> <li>Audience-first: Understand who\u2019s reading and what they need.  </li> <li>Clarity over cleverness: Use plain, precise language.  </li> <li>Structure matters: Organize docs so the path from problem to solution is obvious.  </li> <li>Show, don\u2019t just tell: Use diagrams, screenshots, and examples wherever possible.  </li> <li>Iterate: Treat docs as living systems \u2014 review, improve, and update as technology evolves.</li> </ol>"},{"location":"about/#tools-skills","title":"\ud83d\udee0 Tools &amp; Skills","text":"<ul> <li>Documentation tools: Markdown, MkDocs, Material for MkDocs  </li> <li>Diagrams: Mermaid (flowcharts, sequence diagrams)  </li> <li>Cloud &amp; infra: Azure SQL, F5 load balancers, high availability systems  </li> <li>Languages: PowerShell, SQL, Python  </li> <li>Collaboration: Git/GitHub, Agile workflows, cross-team communication  </li> </ul>"},{"location":"about/#contact","title":"\ud83d\udcec Contact","text":"<ul> <li>LinkedIn </li> <li>GitHub </li> </ul>"},{"location":"concepts/high-availability-basics/","title":"Concept: Understanding High Availability and Failover with Load Balancers","text":""},{"location":"concepts/high-availability-basics/#overview","title":"Overview","text":"<p>High Availability (HA) ensures that systems remain accessible even when individual components fail. Load balancers are a key part of HA strategies, distributing traffic across multiple servers and handling failover.</p> <p>Audience: IT professionals, support engineers, developers Skill Level: Beginner\u2013Intermediate  </p>"},{"location":"concepts/high-availability-basics/#key-concepts","title":"Key Concepts","text":"<ul> <li>High Availability (HA): Designing systems to minimize downtime.  </li> <li>Failover: Automatic redirection of traffic when a server becomes unavailable.  </li> <li>Load Balancer: A device or software that distributes traffic among servers.  </li> </ul>"},{"location":"concepts/high-availability-basics/#how-failover-works","title":"How Failover Works","text":"<ol> <li>Health checks detect an unhealthy server  </li> <li>Load balancer removes the server from rotation  </li> <li>Traffic is routed to healthy servers  </li> <li>Failed server is restored and re-added  </li> </ol>"},{"location":"concepts/high-availability-basics/#example-diagram","title":"Example Diagram","text":"<ul> <li>Insert a simple diagram later showing clients \u2192 load balancer \u2192 servers</li> </ul>"},{"location":"concepts/high-availability-basics/#best-practices","title":"Best Practices","text":"<ul> <li>Use multiple load balancer nodes (active-passive or active-active).  </li> <li>Monitor system health regularly.  </li> <li>Test failover scenarios before production use.  </li> </ul>"},{"location":"concepts/high-availability-basics/#references","title":"References","text":"<ul> <li>Nginx Load Balancing Basics </li> <li>F5 BIG-IP Concepts</li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/","title":"Setup Guide: Restore SQL Database in Azure","text":""},{"location":"setup-guides/restore-sql-database-azure/#overview","title":"Overview","text":"<p>This guide explains how to restore a SQL database in Microsoft Azure using the Azure Portal. It covers prerequisites, architecture, step-by-step instructions, verification, and common issues.</p> <p>Audience: Cloud administrators, database administrators, and support engineers Skill Level: Beginner\u2013Intermediate  </p>"},{"location":"setup-guides/restore-sql-database-azure/#prerequisites","title":"Prerequisites","text":"<ul> <li>An active Azure subscription  </li> <li>Access to the Azure Portal with sufficient permissions  </li> <li>An existing Azure SQL Server instance  </li> <li>A database backup available (automated backup, geo-redundant, or long-term retention)  </li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/#architecture-at-a-glance","title":"Architecture at a Glance","text":"<p>Key Concepts</p> <ul> <li>Backups are stored in Azure-managed storage.  </li> <li>Restore creates a new database; it does not overwrite the source.  </li> <li>Point-in-time restore (PITR) is typically fastest.  </li> <li>Geo-restore and Long-term retention (LTR) restores can take longer, depending on size and region.</li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/#flow-diagram","title":"Flow Diagram","text":"<pre><code>flowchart LR\n    A[Automated / LTR Backups] --&gt;|Point-in-time / Geo / LTR| B[(Azure Backup Storage)]\n    B --&gt; C[Azure Portal: Restore]\n    C --&gt; D{Choose Restore Type}\n    D --&gt;|Point-in-time| E[Create New Database&lt;br/&gt;(Same Server or Different Server)]\n    D --&gt;|Geo-restore| E\n    D --&gt;|Long-term retention| E\n    E --&gt; F[(Deployed Restored DB)]\n    F --&gt; G[Validate: Portal, SSMS, Azure Data Studio]\n</code></pre>"},{"location":"setup-guides/restore-sql-database-azure/#sequence-diagram","title":"Sequence Diagram","text":"<pre><code>sequenceDiagram\n    actor U as User (Portal)\n    participant P as Azure Portal\n    participant R as Restore Service\n    participant S as Azure SQL Server\n    participant B as Backup Storage\n\n    U-&gt;&gt;P: Open DB &gt; Restore\n    P-&gt;&gt;R: Submit restore request&lt;br/&gt;(type + time + target)\n    R-&gt;&gt;B: Read backup/restore point\n    R-&gt;&gt;S: Provision new database\n    S--&gt;&gt;R: New DB ready\n    R--&gt;&gt;P: Deployment complete\n    U-&gt;&gt;S: Connect via SSMS/Azure Data Studio\n</code></pre>"},{"location":"setup-guides/restore-sql-database-azure/#steps","title":"Steps","text":""},{"location":"setup-guides/restore-sql-database-azure/#1-sign-in-to-azure","title":"1) Sign in to Azure","text":"<ul> <li>Go to https://portal.azure.com and sign in.</li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/#2-locate-the-source-database","title":"2) Locate the Source Database","text":"<ul> <li>In the left menu, select SQL databases.</li> <li>Click the database you want to restore.</li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/#3-start-a-restore","title":"3) Start a Restore","text":"<ul> <li>On the database Overview page, select Restore.</li> <li>Choose the restore source:</li> <li>Point-in-time (from automated backups)</li> <li>Geo-restore (from geo-redundant backup)</li> <li>Long-term retention (LTR) (from archived backups)</li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/#4-configure-restore-options","title":"4) Configure Restore Options","text":"<ul> <li>Enter a new database name (must be unique).</li> <li>Select the target server and resource group.</li> <li>(Optional) Adjust compute/storage tier for the restored DB.</li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/#5-deploy-the-restore","title":"5) Deploy the Restore","text":"<ul> <li>Click Review + create \u2192 Create.</li> <li>Wait for the deployment to complete (time varies by size/type).</li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/#verification","title":"Verification","text":"<ol> <li>In SQL databases, confirm the restored database appears.</li> <li>Connect using SQL Server Management Studio (SSMS) or Azure Data Studio.</li> <li>Validate schema and data (spot-check key tables).</li> </ol>"},{"location":"setup-guides/restore-sql-database-azure/#common-issues-fixes","title":"Common Issues &amp; Fixes","text":"<ul> <li>\u201cDatabase name already exists.\u201d \u2192 Use a unique name for the restored database.  </li> <li>Insufficient permissions. \u2192 Ensure your account has Contributor or SQL DB Contributor role.  </li> <li>Restore seems slow. \u2192 Large DBs, geo-restores, or LTR restores can take hours depending on region/size.  </li> <li>Cannot connect after restore. \u2192 Update firewall rules on the SQL Server to allow your client IPs.  </li> </ul>"},{"location":"setup-guides/restore-sql-database-azure/#references","title":"References","text":"<ul> <li>Microsoft Docs \u2014 Restore a database in Azure SQL Database: https://learn.microsoft.com/en-us/azure/azure-sql/database/recovery-using-backups </li> <li>Azure Portal: https://portal.azure.com</li> </ul>"},{"location":"troubleshooting/sql-epoch-conversion/","title":"Troubleshooting Guide: Converting Epoch Timestamps in SQL Server","text":""},{"location":"troubleshooting/sql-epoch-conversion/#overview","title":"Overview","text":"<p>When working with applications or logs that store timestamps in Unix epoch format, you may need to convert them into a human-readable datetime in SQL Server. This guide explains common issues, provides working solutions, and highlights pitfalls to avoid.</p> <p>Audience: Database administrators, support engineers, and developers. Skill Level: Intermediate  </p>"},{"location":"troubleshooting/sql-epoch-conversion/#problem","title":"Problem","text":"<p>You have a column storing epoch timestamps (e.g., <code>1694467200</code>) but queries return unreadable numbers instead of dates.</p> <p>Example:</p> <pre><code>SELECT EventTimeEpoch FROM Logs;\n-- Output: 1694467200\n</code></pre>"},{"location":"troubleshooting/sql-epoch-conversion/#root-cause","title":"Root Cause","text":"<p>SQL Server does not natively store or interpret Unix epoch timestamps. Conversion requires explicit handling.</p>"},{"location":"troubleshooting/sql-epoch-conversion/#solutions","title":"Solutions","text":""},{"location":"troubleshooting/sql-epoch-conversion/#convert-epoch-to-datetime","title":"Convert Epoch to DateTime","text":"<pre><code>SELECT DATEADD(SECOND, EventTimeEpoch, '1970-01-01') AS EventTime FROM Logs;\n</code></pre>"},{"location":"troubleshooting/sql-epoch-conversion/#handling-milliseconds-epoch","title":"Handling Milliseconds Epoch","text":"<p>If your data stores epoch in milliseconds:</p> <pre><code> SELECT DATEADD(SECOND, EventTimeEpoch / 1000, '1970-01-01') AS EventTime FROM Logs;\n</code></pre>"},{"location":"troubleshooting/sql-epoch-conversion/#common-pitfalls","title":"Common Pitfalls","text":"<ul> <li>Forgetting to divide milliseconds by 1000 | results in incorrect dates.</li> <li>Not accounting for UTC vs local timezone differences.</li> <li>Using <code>DATETIME</code> instaed of <code>DATETIME2</code> | potential precision issues.</li> </ul>"},{"location":"troubleshooting/sql-epoch-conversion/#verification","title":"Verification","text":"<p>Run this query to confirm conversion works:</p> <pre><code>SELECT TOP 5\n  EventTimeEpoch,\n  DATEADD(SECOND, EventTimeEpoch, '1970-01-01') AS ConvertedTime\nFROM Logs;\n</code></pre> <p>Expected output should match known event timestamps.</p>"},{"location":"tutorials/f5-powershell-automation/","title":"Tutorial: Automating F5 Load Balancer Tasks with PowerShell","text":""},{"location":"tutorials/f5-powershell-automation/#overview","title":"Overview","text":"<p>This tutorial walks through automating a common F5 load balancer task \u2014 forcing a server offline \u2014 using PowerShell and SSH. It demonstrates scripting basics, automation workflow, and verification steps.</p> <p>Audience: System administrators, support engineers Skill Level: Intermediate  </p>"},{"location":"tutorials/f5-powershell-automation/#prerequisites","title":"Prerequisites","text":"<ul> <li>PowerShell 5.1 or later  </li> <li>SSH access to the F5 load balancer  </li> <li>Appropriate permissions to manage pool members  </li> </ul>"},{"location":"tutorials/f5-powershell-automation/#steps","title":"Steps","text":"<ol> <li>Connect to the F5 via SSH  </li> <li>Run the PowerShell script to force a server offline  </li> <li>Verify the server status  </li> <li>Bring the server back online (if needed)  </li> </ol>"},{"location":"tutorials/f5-powershell-automation/#example-script","title":"Example Script","text":"<p>```powershell $server = \"10.0.0.5\" $pool = \"web_pool\"</p> <p>ssh admin@f5 \"tmsh modify ltm pool $pool members modify { $server:80 { session user-disabled } }\"</p>"}]}